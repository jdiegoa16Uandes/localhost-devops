version: 0.2

env:
  variables:
    PIPELINE_STAGE: ""

phases:
  install:
    commands:
      - set -e
      - echo "Instalando dependencias..."
      - npm install -g newman  

  pre_build:
    commands:
      - set -e
      - echo "Loguearse dentro de Amazon ECR..."
      - aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 781000631387.dkr.ecr.us-east-2.amazonaws.com
  build:
    commands:
      - set -e
      - |
        if [ "$PIPELINE_STAGE" = "build" ]; then
          echo "Inicio de la construcción en $(date)"
          echo "Construyendo imagen de Docker..."
          docker build -t localhost_app_respository:latest  .
          echo "Etiquetando imagen de Docker..."
          docker tag localhost_app_respository:latest 781000631387.dkr.ecr.us-east-2.amazonaws.com/localhost_app_respository:latest
          echo "Creación de imagen completada en $(date)"
          echo "Enviando imagen al repositorio de AWS..."
          docker push 781000631387.dkr.ecr.us-east-2.amazonaws.com/localhost_app_respository:latest
          
          echo "Escribiendo el archivo de definición de la imagen..."
          printf '[{"name":"container-localhost-app","imageUri":"781000631387.dkr.ecr.us-east-2.amazonaws.com/localhost_app_respository:latest"}]' > imageDefinitions.json
                                                                 
          printf '{"ImageURI":"781000631387.dkr.ecr.us-east-2.amazonaws.com/localhost_app_respository:latest"}' > imageDetail.json

        elif [ "$PIPELINE_STAGE" = "unittest" ]; then
          echo "Ejecutando pruebas unitarias dentro del contenedor Docker..."
          docker build -t my-test-image .
          docker run --rm my-test-image sh -c "python3 -m unittest discover -s test -p 'test_*.py'"
          TEST_RESULT=$?
          if [ $TEST_RESULT -ne 0 ]; then
            echo "Pruebas unitarias fallaron."
            exit $TEST_RESULT
          fi
          echo "Pruebas unitarias completadas exitosamente."

        else
          echo "PIPELINE_STAGE no es build ni unittest, omitiendo la construcción de la imagen"
        fi

  post_build:
    commands:
      - set -e
      - |
        if [ "$PIPELINE_STAGE" = "test" ]; then
          echo "Ejecutando pruebas de aceptación con Postman y Newman..."
          newman run acceptance-test/blacklist-collection.postman_collection.json -e acceptance-test/fargate.postman_environment.json
          NEWMAN_RESULT=$?
          if [ $NEWMAN_RESULT -ne 0 ]; then
            echo "Las pruebas de Postman fallaron."
            exit $NEWMAN_RESULT
          fi
          echo "Pruebas de Postman completadas exitosamente."
        else
          echo "PIPELINE_STAGE no es test, omitiendo la ejecución de pruebas"
        fi

artifacts:
  files:
    - imageDefinitions.json
    - imageDetail.json
    - taskdef.json
    - appspec.json
  name: BuildArtifact
